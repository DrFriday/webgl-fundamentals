// Fills the buffer with the values that define a rectangle.
export function setRectangle(gl, x, y, width, height) {
    const x1 = x;
    const x2 = x + width;
    const y1 = y;
    const y2 = y + height;

    // NOTE: gl.bufferData(gl.ARRAY_BUFFER, ...) will affect
    // whatever buffer is bound to the `ARRAY_BUFFER` bind point
    // but so far we only have one buffer. If we had more than one
    // buffer we'd want to bind that buffer to `ARRAY_BUFFER` first.

    gl.bufferData(
        gl.ARRAY_BUFFER,
        new Float32Array([x1, y1, x2, y1, x1, y2, x1, y2, x2, y1, x2, y2]),
        gl.STATIC_DRAW
    );
}

export function setGeometry(gl: WebGL2RenderingContext): number {
    const positions = [
        // left column
        0,
        0,
        0,
        30,
        0,
        0,
        0,
        150,
        0,
        0,
        150,
        0,
        30,
        0,
        0,
        30,
        150,
        0,

        // top rung
        30,
        0,
        0,
        100,
        0,
        0,
        30,
        30,
        0,
        30,
        30,
        0,
        100,
        0,
        0,
        100,
        30,
        0,

        // middle rung
        30,
        60,
        0,
        67,
        60,
        0,
        30,
        90,
        0,
        30,
        90,
        0,
        67,
        60,
        0,
        67,
        90,
        0
    ];
    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(positions), gl.STATIC_DRAW);

    return positions.length;
}

export function set3dF(gl: WebGL2RenderingContext): number {
    const positions = [
        // left column front
        0,
        0,
        0,
        30,
        0,
        0,
        0,
        150,
        0,
        0,
        150,
        0,
        30,
        0,
        0,
        30,
        150,
        0,

        // top rung front
        30,
        0,
        0,
        100,
        0,
        0,
        30,
        30,
        0,
        30,
        30,
        0,
        100,
        0,
        0,
        100,
        30,
        0,

        // middle rung front
        30,
        60,
        0,
        67,
        60,
        0,
        30,
        90,
        0,
        30,
        90,
        0,
        67,
        60,
        0,
        67,
        90,
        0,

        // left column back
        0,
        0,
        30,
        30,
        0,
        30,
        0,
        150,
        30,
        0,
        150,
        30,
        30,
        0,
        30,
        30,
        150,
        30,

        // top rung back
        30,
        0,
        30,
        100,
        0,
        30,
        30,
        30,
        30,
        30,
        30,
        30,
        100,
        0,
        30,
        100,
        30,
        30,

        // middle rung back
        30,
        60,
        30,
        67,
        60,
        30,
        30,
        90,
        30,
        30,
        90,
        30,
        67,
        60,
        30,
        67,
        90,
        30,

        // top
        0,
        0,
        0,
        100,
        0,
        0,
        100,
        0,
        30,
        0,
        0,
        0,
        100,
        0,
        30,
        0,
        0,
        30,

        // top rung right
        100,
        0,
        0,
        100,
        30,
        0,
        100,
        30,
        30,
        100,
        0,
        0,
        100,
        30,
        30,
        100,
        0,
        30,

        // under top rung
        30,
        30,
        0,
        30,
        30,
        30,
        100,
        30,
        30,
        30,
        30,
        0,
        100,
        30,
        30,
        100,
        30,
        0,

        // between top rung and middle
        30,
        30,
        0,
        30,
        30,
        30,
        30,
        60,
        30,
        30,
        30,
        0,
        30,
        60,
        30,
        30,
        60,
        0,

        // top of middle rung
        30,
        60,
        0,
        30,
        60,
        30,
        67,
        60,
        30,
        30,
        60,
        0,
        67,
        60,
        30,
        67,
        60,
        0,

        // right of middle rung
        67,
        60,
        0,
        67,
        60,
        30,
        67,
        90,
        30,
        67,
        60,
        0,
        67,
        90,
        30,
        67,
        90,
        0,

        // bottom of middle rung.
        30,
        90,
        0,
        30,
        90,
        30,
        67,
        90,
        30,
        30,
        90,
        0,
        67,
        90,
        30,
        67,
        90,
        0,

        // right of bottom
        30,
        90,
        0,
        30,
        90,
        30,
        30,
        150,
        30,
        30,
        90,
        0,
        30,
        150,
        30,
        30,
        150,
        0,

        // bottom
        0,
        150,
        0,
        0,
        150,
        30,
        30,
        150,
        30,
        0,
        150,
        0,
        30,
        150,
        30,
        30,
        150,
        0,

        // left side
        0,
        0,
        0,
        0,
        0,
        30,
        0,
        150,
        30,
        0,
        0,
        0,
        0,
        150,
        30,
        0,
        150,
        0
    ];
    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(positions), gl.STATIC_DRAW);

    return positions.length;
}
